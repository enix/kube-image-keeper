# Default values for kube-image-keeper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

manager:
  # -- Number of manager pods
  replicas: 1
  image:
    # -- Manager image repository
    repository: quay.io/enix/kube-image-keeper
    # -- Manager image pull policy
    pullPolicy: IfNotPresent
    # -- Manager image tag. Default chart appVersion
    tag: ""
  # -- Manager logging verbosity
  verbosity: INFO
  # -- Specify secrets to be used when pulling manager image
  imagePullSecrets: []
  # -- Annotations to add to the manager pod
  podAnnotations: {}
  # -- Security context for the manager pod
  podSecurityContext: {}
  # -- Security context for containers of the manager pod
  securityContext: {}
  # -- Node selector for the manager pod
  nodeSelector: {}
  # -- Toleration for the manager pod
  tolerations: []
  # -- Set the PriorityClassName for the manager pod
  priorityClassName: ""
  pdb:
    # -- Create a PodDisruptionBudget for the manager pod
    create: false
    # -- Minimum available pods
    minAvailable: 1
    # -- Maximum unavailable pods
    maxUnavailable: ""
  # -- Affinity for the manager pod
  affinity: {}
  # -- Extra env variables for the manager pod
  env: []
  # -- Readiness probe definition for the manager pod
  readinessProbe:
    httpGet:
      path: /readyz
      port: 8081
  # -- Liveness probe definition for the manager pod
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8081
  resources:
    requests:
      # -- Cpu requests for the manager pod
      cpu: "50m"
      # -- Memory requests for the manager pod
      memory: "50Mi"
    limits:
      # -- Cpu limits for the manager pod
      cpu: "1"
      # -- Memory limits for the manager pod
      memory: "512Mi"
  serviceMonitor:
    # -- Should a ServiceMonitor object be installed to scrape kuik manager metrics. For prometheus-operator (kube-prometheus) users.
    create: false
    # -- Target scrape interval set in the ServiceMonitor
    scrapeInterval: 60s
    # -- Target scrape timeout set in the ServiceMonitor
    scrapeTimeout: 30s
    # -- Additional labels to add to ServiceMonitor objects
    extraLabels: {}
    # -- Relabel config for the ServiceMonitor, see: https://coreos.com/operators/prometheus/docs/latest/api.html#relabelconfig
    relabelings: []
  webhook:
    # -- If true, create the issuer used to issue the webhook certificate
    createCertificateIssuer: true
    # -- Issuer reference to issue the webhook certificate, ignored if createCertificateIssuer is true
    certificateIssuerRef:
      kind: Issuer
      name: kube-image-keeper-selfsigned-issuer

rbac:
  # -- Create the ClusterRole and ClusterRoleBinding. If false, need to associate permissions with serviceAccount outside this Helm chart.
  create: true

serviceAccount:
  # -- Create the serviceAccount. If false, use serviceAccount with specified name (or "default" if false and name unset.)
  create: true
  # -- Name of the serviceAccount (auto-generated if unset and create is true)
  name: ""
  # -- Annotations to add to the serviceAccount
  annotations: {}
  # -- Additional labels to add to the serviceAccount
  extraLabels: {}

registryMonitors:
  defaultSpec:
    # -- Time window during which maxPerInterval limits the number of monitoring tasks. (e.g., 6h, 30m)
    interval: 3h
    # -- Maximum monitoring tasks to run in the given interval and for a given registry.
    maxPerInterval: 25
    # -- Maximum monitoring tasks to run in parallel for a given registry.
    parallel: 1
    # -- HTTP method to use to monitor an image of this registry
    method: HEAD
  # -- RegistryMonitors to create on install and upgrade, if name is not provided, defaults to registry value.
  items:
    docker.io:
      interval: 1h
      maxPerInterval: 2
    public.ecr.aws:
      interval: 1h
      maxPerInterval: 2

# -- Delay in hours before deleting an Image that is not used by any pod
unusedImageTTL: 24

metrics:
  imageLastMonitorAgeMinutesBuckets:
    # -- Bucket generation method (can be one of exponential, exponentialRange or custom)
    type: exponentialRange
    # -- Range from 15m to 1297m (21h) (start*factor^count) See https://pkg.go.dev/github.com/prometheus/client_golang/prometheus#ExponentialBuckets
    exponential:
      # -- Default is 15m
      start: 15
      factor: 1.5
      count: 12
    # -- See https://pkg.go.dev/github.com/prometheus/client_golang/prometheus#ExponentialBucketsRange
    exponentialRange:
      # Default is 10m
      min: 15
      # Default is 16.6h
      max: 1000
      count: 12
    # -- List of buckets to create in minutes, ommiting +inf
    custom: [10, 30, 60, 120, 180, 360, 1440]
