{{- if and (not .Values.zot.enabled) .Values.registryUI.enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kube-image-keeper.fullname" . }}-registry-ui-basic-auth
  annotations:
    "helm.sh/resource-policy": "keep"
type: kubernetes.io/basic-auth
stringData:
  {{- $secretName := printf "%s-%s" (include "kube-image-keeper.fullname" .) "registry-ui-basic-auth" }}
  {{- $secretData := (get (lookup "v1" "Secret" .Release.Namespace $secretName) "data") | default dict }}
  # set $password to existing secret data or generate a random one when it does not exists
  {{- $password := (get $secretData "password" | b64dec) | default (randAlphaNum 32) }}
  username: {{ .Values.registryUI.auth.username }}
  password: {{ .Values.registryUI.auth.password | default $password }}
{{- end }}
