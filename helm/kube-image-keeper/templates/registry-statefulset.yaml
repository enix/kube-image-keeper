apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: registry
  labels:
    {{- include "kube-image-keeper.registry-labels" . | nindent 4 }}
spec:
  serviceName: registry
  selector:
    matchLabels:
      {{- include "kube-image-keeper.registry-selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.registry.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kube-image-keeper.registry-selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.registry.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.registry.podSecurityContext | nindent 8 }}
      {{- if .Values.registry.persistence.enabled }}
      initContainers:
        - name: setup-dirs
          image: "{{ .Values.registry.image.repository }}:{{ .Values.registry.image.tag }}"
          imagePullPolicy: {{ .Values.registry.image.pullPolicy }}
          command:
            - mkdir
            - -p
            - /var/lib/registry/docker/registry/v2/repositories/
            - /var/lib/registry/docker/registry/v2/blobs/
          resources:
            {{- toYaml .Values.registry.resources | nindent 12 }}
          {{- if .Values.registry.persistence.enabled }}
          volumeMounts:
            - mountPath: /var/lib/registry
              name: data
          {{- end }}
        - name: garbage-collector
          image: "{{ .Values.registry.image.repository }}:{{ .Values.registry.image.tag }}"
          imagePullPolicy: {{ .Values.registry.image.pullPolicy }}
          command:
            - bin/registry
            - garbage-collect
            - /etc/docker/registry/config.yml
            - --delete-untagged=true
          resources:
            {{- toYaml .Values.registry.resources | nindent 12 }}
          {{- if .Values.registry.persistence.enabled }}
          volumeMounts:
            - mountPath: /var/lib/registry
              name: data
          {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.registry.securityContext | nindent 12 }}
          image: "{{ .Values.registry.image.repository }}:{{ .Values.registry.image.tag }}"
          imagePullPolicy: {{ .Values.registry.image.pullPolicy }}
          ports:
            - containerPort: 5000
              protocol: TCP
          resources:
            {{- toYaml .Values.registry.resources | nindent 12 }}
          env:
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
            {{- range .Values.registry.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- if .Values.registry.persistence.enabled }}
          volumeMounts:
            - mountPath: /var/lib/registry
              name: data
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.registry.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.registry.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.registry.persistence.size }}
{{- end }}
