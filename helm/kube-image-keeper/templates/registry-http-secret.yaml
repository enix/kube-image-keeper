{{- if eq (include "kube-image-keeper.registry-stateless-mode" .) "true" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kube-image-keeper.fullname" . }}-registry-http-secret
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
  {{- $secretName := printf "%s-%s" (include "kube-image-keeper.fullname" .) "registry-http-secret" }}
  {{- $secretData := (get (lookup "v1" "Secret" .Release.Namespace $secretName) "data") | default dict }}
  # set $secret to existing secret data or generate a random one when it does not exist
  {{- $secret := .Values.registry.httpSecret | default (get $secretData "secret" | b64dec) | default (randAlphaNum 32) }}
  secret: {{ $secret }}
{{- end }}
