{{- if .Values.minio.enabled }}

{{- $secretName := "kube-image-keeper-minio-registry-passwords" }}
{{- $secretData := (get (lookup "v1" "Secret" .Release.Namespace $secretName) "data") | default dict }}
# set passwords to existing secret data or generate random ones when they do not exist
{{- $password := (get $secretData "registry" | b64dec) | default (randAlphaNum 32) }}

apiVersion: v1
kind: Secret
metadata:
  name: kube-image-keeper-minio-registry-users
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
  registry: |
    username=registry
    password={{ $password }}
    policies=readwrite
    setPolicies=true
---
apiVersion: v1
kind: Secret
metadata:
  name: kube-image-keeper-minio-registry-passwords
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
  registry: {{ $password }}
{{- end }}
