apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "kube-image-keeper.fullname" . }}-proxy
  labels:
    {{- include "kube-image-keeper.proxy-labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kube-image-keeper.proxy-selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.proxy.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kube-image-keeper.proxy-selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.proxy.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kube-image-keeper.serviceAccountName" . }}
      {{- if .Values.proxy.priorityClassName }}
      priorityClassName: {{ .Values.proxy.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.proxy.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      securityContext:
        {{- toYaml .Values.proxy.podSecurityContext | nindent 8 }}
      containers:
        - name: cache-proxy
          securityContext:
            {{- toYaml .Values.proxy.securityContext | nindent 12 }}
          image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
          ports:
            {{- if .Values.proxy.hostNetwork }}
            - containerPort: {{ .Values.proxy.hostPort }}
              hostPort: {{ .Values.proxy.hostPort }}
              protocol: TCP
            - containerPort: {{ .Values.proxy.metricsPort }}
              hostPort: {{ .Values.proxy.metricsPort }}
              name: metrics
              protocol: TCP
            {{- else }}
            - containerPort: {{ .Values.proxy.hostPort }}
              hostIP: {{ .Values.proxy.hostIp }}
              hostPort: {{ .Values.proxy.hostPort }}
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
            {{- end }}
          command:
            - registry-proxy
            - -v={{ .Values.proxy.verbosity }}
            - -registry-endpoint={{ include "kube-image-keeper.fullname" . }}-registry:5000
            {{- with .Values.proxy.kubeApiRateLimits }}
            - -kube-api-rate-limit-qps={{ .qps }}
            - -kube-api-rate-limit-burst={{ .burst }}
            {{- end }}
            {{- range .Values.insecureRegistries }}
            - -insecure-registries={{- . }}
            {{- end }}
            {{- with .Values.rootCertificateAuthorities }}
            {{- range .keys }}
            - -root-certificate-authorities=/etc/ssl/certs/registry-certificate-authorities/{{- . }}
            {{- end }}
            {{- end }}
            {{- if .Values.proxy.hostNetwork }}
            - -bind-address={{ .Values.proxy.hostIp }}:{{ .Values.proxy.hostPort }}
            - -metrics-bind-address={{ .Values.proxy.hostIp }}:{{ .Values.proxy.metricsPort }}
            {{- else }}
            - -bind-address=:{{ .Values.proxy.hostPort }}
            {{- end }}
          {{- if .Values.rootCertificateAuthorities }}
          {{- with .Values.proxy.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /etc/ssl/certs/registry-certificate-authorities
              name: registry-certificate-authorities
              readOnly: true
          {{- end }}
          {{- $readinessProbe := deepCopy .Values.proxy.readinessProbe }}
          {{- if .Values.proxy.hostNetwork }}
            {{- $readinessProbe := merge $readinessProbe.httpGet (dict "host" "localhost") }}
          {{- end }}
          {{- with .Values.proxy.readinessProbe }}
          readinessProbe:
            {{- $readinessProbe | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.proxy.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.proxy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.proxy.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.proxy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.rootCertificateAuthorities }}
      volumes:
      - name: registry-certificate-authorities
        secret:
          defaultMode: 420
          secretName: {{ .secretName }}
      {{- end }}
