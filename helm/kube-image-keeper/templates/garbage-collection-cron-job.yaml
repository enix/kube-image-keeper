{{- if and .Values.registry.garbageCollectionSchedule .Values.registry.persistence.enabled }}
{{- if semverCompare ">=1.21-0" (default .Capabilities.KubeVersion.Version .Values.kubeVersion) -}}
apiVersion: batch/v1
{{- else -}}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: registry-garbage-collection
  labels:
    {{- include "kube-image-keeper.garbage-collection-labels" . | nindent 4 }}
spec:
  concurrencyPolicy: Forbid
  schedule: "{{ .Values.registry.garbageCollectionSchedule }}"
  jobTemplate:
    spec:
      backoffLimit: 3
      activeDeadlineSeconds: 600
      template:
        spec:
          serviceAccountName: registry-restart
          restartPolicy: Never
          containers:
            - name: kubectl
              image: bitnami/kubectl
              command:
                - bash
                - -c
                - >-
                  kubectl rollout restart sts registry &&
                  kubectl rollout status sts registry
{{- end }}
